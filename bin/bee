#!/usr/bin/env php
<?php

// Debogguage.
error_reporting(E_ALL);
ini_set('display_errors', 0);

// Récupération des vendors.
$paths = [
    __DIR__.'/../autoload.php',
    __DIR__.'/../../../autoload.php'
];
foreach ($paths as $path) {
    if (file_exists($path)) {
        require_once $path;
        break;
    }
}

// Chargement de Wordpress
$wp_paths = [
    __DIR__ . '/../../wp-load.php',
    __DIR__ . '/../../../../wp-load.php'
];

foreach ($wp_paths as $wp_path) {
    if (file_exists($wp_path)) {
        require_once $wp_path;
        break;
    }
}

/*
use tiFy\Console\Application;
use Symfony\Component\Console\Input\InputOption;

$app = (new Application('bee', '1.0.0'))->setDefaultHeaders($argv);

// Déclaration des commandes.
foreach (config('console.commands', []) as $k => $command) {
    if (is_numeric($k) && class_exists($command)) {
        $command = $app->add(new $command());
    } elseif (class_exists($command)) {
        $command = $app->add(new $command($k));
    }

    if (!$command->getDefinition()->hasOption('url')) {
        $command->addOption(
            'url',
            null,
            InputOption::VALUE_OPTIONAL,
            'site url'
        );
    }
}

// Exécution.
try {
    $app->run();
} catch (Exception $e) {
    wp_die($e->getMessage(), 500);
}
*/